ComplexVariable y; 
 std::complex<double> mycomplex(0, 0); 
mycomplex= std::complex<double>(0, -12); 
CHECK(solve(16*y + 25i == 15*y+13i) == mycomplex); 
mycomplex= std::complex<double>(0, 1); 
CHECK(solve(1*y + 35i == 0*y+36i) == mycomplex); 
mycomplex= std::complex<double>(0, -22); 
CHECK(solve(33*y + 39i == 32*y+17i) == mycomplex); 
mycomplex= std::complex<double>(0, -17); 
CHECK(solve(12*y + 38i == 11*y+21i) == mycomplex); 
mycomplex= std::complex<double>(0, 7); 
CHECK(solve(18*y + 1i == 17*y+8i) == mycomplex); 
mycomplex= std::complex<double>(0, 30); 
CHECK(solve(9*y + 6i == 8*y+36i) == mycomplex); 
mycomplex= std::complex<double>(0, 17); 
CHECK(solve(24*y + 10i == 23*y+27i) == mycomplex); 
mycomplex= std::complex<double>(0, 15); 
CHECK(solve(36*y + 1i == 35*y+16i) == mycomplex); 
mycomplex= std::complex<double>(0, 6); 
CHECK(solve(26*y + 17i == 25*y+23i) == mycomplex); 
mycomplex= std::complex<double>(0, -1); 
CHECK(solve(31*y + 21i == 30*y+20i) == mycomplex); 
mycomplex= std::complex<double>(0, -8); 
CHECK(solve(9*y + 18i == 8*y+10i) == mycomplex); 
mycomplex= std::complex<double>(0, 8); 
CHECK(solve(30*y + 5i == 29*y+13i) == mycomplex); 
mycomplex= std::complex<double>(0, 16); 
CHECK(solve(16*y + 21i == 15*y+37i) == mycomplex); 
mycomplex= std::complex<double>(0, 30); 
CHECK(solve(8*y + 8i == 7*y+38i) == mycomplex); 
mycomplex= std::complex<double>(0, 9); 
CHECK(solve(26*y + 22i == 25*y+31i) == mycomplex); 
mycomplex= std::complex<double>(0, -31); 
CHECK(solve(23*y + 34i == 22*y+3i) == mycomplex); 
mycomplex= std::complex<double>(0, -17); 
CHECK(solve(38*y + 25i == 37*y+8i) == mycomplex); 
mycomplex= std::complex<double>(0, -11); 
CHECK(solve(3*y + 20i == 2*y+9i) == mycomplex); 
mycomplex= std::complex<double>(0, -2); 
CHECK(solve(40*y + 3i == 39*y+1i) == mycomplex); 
mycomplex= std::complex<double>(0, 5); 
CHECK(solve(38*y + 6i == 37*y+11i) == mycomplex); 
mycomplex= std::complex<double>(0, -7); 
CHECK(solve(30*y + 23i == 29*y+16i) == mycomplex); 
mycomplex= std::complex<double>(0, -24); 
CHECK(solve(7*y + 39i == 6*y+15i) == mycomplex); 
mycomplex= std::complex<double>(0, 16); 
CHECK(solve(12*y + 5i == 11*y+21i) == mycomplex); 
mycomplex= std::complex<double>(0, -21); 
CHECK(solve(27*y + 31i == 26*y+10i) == mycomplex); 
mycomplex= std::complex<double>(0, 6); 
CHECK(solve(11*y + 26i == 10*y+32i) == mycomplex); 
mycomplex= std::complex<double>(0, 17); 
CHECK(solve(12*y + 10i == 11*y+27i) == mycomplex); 
mycomplex= std::complex<double>(0, 9); 
CHECK(solve(38*y + 18i == 37*y+27i) == mycomplex); 
mycomplex= std::complex<double>(0, 12); 
CHECK(solve(33*y + 20i == 32*y+32i) == mycomplex); 
mycomplex= std::complex<double>(0, 7); 
CHECK(solve(22*y + 29i == 21*y+36i) == mycomplex); 
mycomplex= std::complex<double>(0, -15); 
CHECK(solve(32*y + 24i == 31*y+9i) == mycomplex); 
mycomplex= std::complex<double>(0, 27); 
CHECK(solve(35*y + 5i == 34*y+32i) == mycomplex); 
mycomplex= std::complex<double>(0, -3); 
CHECK(solve(25*y + 31i == 24*y+28i) == mycomplex); 
mycomplex= std::complex<double>(0, -30); 
CHECK(solve(1*y + 36i == 0*y+6i) == mycomplex); 
mycomplex= std::complex<double>(0, -4); 
CHECK(solve(4*y + 36i == 3*y+32i) == mycomplex); 
mycomplex= std::complex<double>(0, -1); 
CHECK(solve(37*y + 19i == 36*y+18i) == mycomplex); 
mycomplex= std::complex<double>(0, 3); 
CHECK(solve(40*y + 20i == 39*y+23i) == mycomplex); 
mycomplex= std::complex<double>(0, 22); 
CHECK(solve(1*y + 6i == 0*y+28i) == mycomplex); 
mycomplex= std::complex<double>(0, -13); 
CHECK(solve(18*y + 16i == 17*y+3i) == mycomplex); 
mycomplex= std::complex<double>(0, 31); 
CHECK(solve(9*y + 8i == 8*y+39i) == mycomplex); 
mycomplex= std::complex<double>(0, 16); 
CHECK(solve(36*y + 15i == 35*y+31i) == mycomplex); 
